// Generated by https://quicktype.io

export interface StrategyQueryData {
  strategy: Strategy;
  // fees: Fee[]
}

export interface Fee {
  id: string;
  timestamp: string;
  amount0: string;
  amount1: string;
  user?: User;
}

export interface User {
  id: string;
}

export interface Strategy {
  id: string;
  name: string;
  hash: string;
  pool: string;
  createdAtTimestamp: string;
  amount0: string;
  amount1: string;
  unusedAmount0: string;
  unusedAmount1: string;
  shares: string;
  owner: string;
  userCount: string;
  feeTier: string;
  collectedFeesToken0: string;
  type: DataFeed;
  dex: Dex;
  collectedFeesToken1: string;
  onHold: boolean;
  token0: Token;
  token1: Token;
  // adds: Fee[]
  // removes: Fee[]
  // rebalance: Rebalance[];
}

export enum DataFeed {
  Chainlink = 'Chainlink',
  Twap = 'Twap',
}

export enum Dex {
  Apeswap = 'Apeswap',
  Arbidex = 'Arbidex',
  Camelot = 'Camelot',
  Fusionx = 'Fusionx',
  Horiza = 'Horiza',
  Pancakeswap = 'Pancakeswap',
  Ramses = 'Ramses',
  Retro = 'Retro',
  Stellaswap = 'Stellaswap',
  Sushiswap = 'Sushiswap',
  Thena = 'Thena',
  Uniswap = 'Uniswap',
}

export interface Rebalance {
  timestamp: string;
  gasUsed: string;
  ranges: Range[];
}

export interface Range {
  amount0: string;
  amount1: string;
  tickLower: string;
  tickUpper: string;
}

export interface Token {
  id: string;
  symbol: string;
  name: string;
  decimals: string;
}
